!3 POST

Posting an XML should create a resource

!*** Note
You set the body for the POST operation with the setBody.
Note there is no '''let''' expression instead '''header''' can extract the element we want
and save to a normal Fitnesse variable
***!

|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}|
|set body|<resource><name>test post</name><data>some data</data></resource>|
|post|/resources/|
|check|status code|201|
|ensure|has body|no-body|
|$id=|header|Location:/resources/(.+)|

!*** Note
Note there is no '''let''' expression instead '''body''' can extract the element we want
and save to a normal Fitnesse variable
***!

|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}|
|get | /resources/$id |
|check|status code|200|
|ensure|has body|!-
 /resource/name[text()='test post']<br/>
 /resource/data[text()='some data']
-!|
|$name=|body|/resource/name/text()|

Labels that are set to null are rendered using the default value for null, e.g. the string "null"

|scenario|show null value|nullValue|
|note| scenario just so we can see $thisIsNull evaluated |

|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}|
|get | /resources/$id |
|check|status code|200|
|$thisIsNull=|body|/resource/somewhereelse/text()|
|show null value| $thisIsNull |

Albeit, the value can be overridden

| !-smartrics.rest.fitnesse.fixture.RestFixtureConfig-! | withBespokeNullRepresentation |
| restfixture.null.value.representation | !--! |

|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}| withBespokeNullRepresentation|
|get | /resources/$id |
|check|status code|200|
|$thisIsNull=|body|/resource/somewhereelse/text()|
|show null value| $thisIsNull |

| !-smartrics.rest.fitnesse.fixture.RestFixtureConfig-! | withBespokeNullRepresentation |
| restfixture.null.value.representation | !-NIL-! |

|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}| withBespokeNullRepresentation|
|get | /resources/$id |
|check|status code|200|
|$thisIsNull=|body|/resource/somewhereelse/text()|
|show null value| $thisIsNull |


!**** Json
Expectations can be asserted also in json format for responses whose content type is 'application/json'
Variables may be substituted in the expected result
****!

|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}|
|set body|!- { "resource" : { "name" : "test post", "data" : "some data" } } -!|
|post|/resources/|
|check|status code|201|
|ensure|has body|no-body|
|$id=|header|Location:/resources/(.+)|

|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}|
|get | /resources/$id.json |
|check|status code|200|
|ensure|has header|Content-Type : application/json |
|ensure|has body|!-
 /resource/name[text()='test post']<br/>
 /resource/data[text()='some data']
-!|

!**** File uploads
Use the multipartFile property to upload files to a server
****!
|Action Fixture.|
|start|!-smartrics.rest.test.fitnesse.fixture.FileUtilFixture-!|
|enter|content|!- { "resource" : { "name" : "test post", "data" : "some data" } } -!|
|enter|name|${tempDirectory}/tempfile|
|check|create| true |
|check|exists| true |

|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}|
|set multipart file name |${tempDirectory}/tempfile|
|post | /resources/ |
|check|status code|200|
|check|response body|file: { "resource" : { "name" : "test post", "data" : "some data" } }|


|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}|
|set multipart file name |${tempDirectory}/tempfile|
|set multipart file parameter name|abc123|
|post | /resources/ |
|check|status code|200|
|check|response body|abc123: { "resource" : { "name" : "test post", "data" : "some data" } }|

Use simple file upload
|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}|
|set file name |${tempDirectory}/tempfile|
|post | /resources/ |
|check|status code|200|
|check|response body|{ "resource" : { "name" : "test post", "data" : "some data" } }|

|Action Fixture.|
|start|!-smartrics.rest.test.fitnesse.fixture.FileUtilFixture-!|
|enter|name|${tempDirectory}/tempfile|
|check|delete| true |
|check|exists| false |

Other than the aforementioned content types you can emulate form POSTs. 
Remember to escape the setBody content cell with ! - -!

|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}|
|set header|Content-Type : application/x-www-form-urlencoded;charset=UTF-8|
|set body|!-name=test%20post&data=some%20data-!|
|post | /resources/ |
|check|status code|201|
|ensure|has body|no-body|
|$id=|header|Location:/resources/(.+)|

| !-smartrics.rest.fitnesse.fixture.RestFixture-! |http://${jettyHost}:${jettyPort}|
|GET    | /resources/$id | 200 | |!-
 /resource/name[text()='test post']
 /resource/data[text()='some data']
-! |


