!3 Overriding content handlers

!-RestFixture-! uses three content handlers to parse and set expectations used to verify the behaviour of HTTP calls. 
These are the handlers currently available:
 * '''XML''' interprets the body as an xml string and allows XPath expressions as expectations on that content
 * '''JSON''' interprets the body as a JSON string and allows expectations to be written in JavaScript.
 * '''TEXT''' interprets the body as a string and allows regular expression expectations.

These are the defaults

 * default=XML
 * application/xml=XML
 * application/json=JSON
 * text/plain=TEXT

!*** Note: unrecognised content types.
Content types not recogised will be mapped to the default content handler (XML).
***!

For example, XML handler is used for for content types of application/xml; hence XPaths can be used to set expectations:

|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}|
|get|/resources/0|
|check|status code|200|
|ensure|has header|Content-Type : application/xml;.+|
|ensure|has body|!-
 /resource/name[text()='a funky name'] <br/>
 /resource/data[text()='an important message']
-!|

With the !-RestScriptFixture-! you can specify a type to use with !-hasBodyUsingType-!

|script|!-smartrics.rest.fitnesse.fixture.RestScriptFixture-!|http://${jettyHost}:${jettyPort}|
|get|/resources/0|
|check|status code|200|
|ensure|has header|Content-Type : application/xml;.+|
|ensure|has body|<resource>[\s.]*<name>a funky name</name>[\s\w\d<>/=\:'.]*</resource>[\s]*|using type|text/plain|
|ensure|has body|!-
 /resource/name[text()='a funky name'] <br/>
 /resource/data[text()='an important message']
-!|

